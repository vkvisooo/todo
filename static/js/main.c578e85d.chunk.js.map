{"version":3,"sources":["context/context.js","reducer/reducer.js","components/TodoHeaders.js","components/TodoLists.js","components/Input.js","components/TodoForms.js","components/Container.js","index.js","usePersists.js"],"names":["Store","React","createContext","todoListData","Meetings","Project_Queries","todoTypelist","initalValues","addTodo","state","payload","newTodoList","Object","objectSpread","key","toConsumableArray","push","todo","deleteTodo","_ref","filterTodo","filter","t","length","defineProperty","deteteTodoDetail","_ref2","newTodoTypelist","list","addTodoDetail","reducer","arguments","undefined","action","type","todos","includes","backup","TodoHeader","props","react_default","a","createElement","className","children","TodoList","count","activeTodo","split","join","_useContext","useContext","dispatch","todoList","header","TodoHeaders_TodoHeader","concat","console","log","map","style","marginLeft","onClick","Input","value","autoFocus","placeholder","onKeyUp","handleSubmitForm","onChange","handleChange","handleClick","TodoForm","_useState","useState","_useState2","slicedToArray","setTodo","handleTodoAdd","inputProps","autofocus","event","keyCode","e","target","Container","todoTypeList","setTodoTypeList","_useState3","_useState4","setActiveTodo","handleTodoTypeList","App","context","globalStore","persistedContext","localStorage","getItem","JSON","parse","usePersistedContext","_usePersistedReducer","useEffect","setItem","stringify","usePersistedReducer","useReducer","_usePersistedReducer2","context_context","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c578e85d.chunk.js","sourcesContent":["import React from \"react\";\n\n// Store Context is the global context that is managed by reducers.\n\nconst Store = React.createContext({\n  todoListData: {\n    Meetings: [\n      \"Meeting 1\",\n      \"Meeting 2\",\n      \"Meeting 3\",\n      \"Meeting 4\"\n    ],\n    Project_Queries: [\n      \"Query 1\",\n      \"Query 2\",\n      \"Query 3\",\n      \"Query 4\"\n    ],\n  },\n  todoTypelist: ['Meetings', 'Project Queries']\n});\n\nexport default Store;\n","const initalValues = {\n  todoTypelist: [],\n  todoListData: {}\n}\n\nconst addTodo = (state, payload) => {\n  const newTodoList = { ...state.todoListData }\n  newTodoList[payload.key] = newTodoList[payload.key] ? [...newTodoList[payload.key]] : [];\n  newTodoList[payload.key].push(payload.todo);\n  return newTodoList;\n}\n\nconst deleteTodo = (state, {key, todo}) => {\n  let newTodoList = { ...state.todoListData }\n  const filterTodo = newTodoList[key].filter((t) => t !== todo);\n  debugger;\n  if (!filterTodo.length) {\n    delete newTodoList[key];\n    return { ...newTodoList };\n  }\n  return {...newTodoList, [key]: filterTodo };\n}\n\nconst deteteTodoDetail = (state, {key}) => {\n  const newTodoList = { ...state.todoListData };\n  let newTodoTypelist = [ ...state.todoTypelist ];\n  if (newTodoList[key].length === 1) {\n    newTodoTypelist =  newTodoTypelist.filter(list => list !== key);\n  }\n  return newTodoTypelist;\n}\n\nconst addTodoDetail = (state, payload) => {\n  const newTodoTypelist = [ ...state.todoTypelist ] \n  newTodoTypelist.push(payload);\n  return newTodoTypelist;\n}\n\nexport default function reducer(state = initalValues, action) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      // return current state if empty\n      if (!action.payload) {\n        return state;\n      }\n      // return current state if duplicate\n      if (state.todos.includes(action.payload)) {\n        return state;\n      }\n      return {\n        ...state,\n        todoListData: addTodo(state, action.payload),  \n      };\n    case \"COMPLETE\":\n      return {\n        ...state,\n        backup: { ...state.todoListData },\n        todoListData: deleteTodo(state, action.payload),\n        todoTypelist: deteteTodoDetail(state, action.payload)\n      };\n    \n    case \"TODO_TYPE_LIST\":\n      return {\n        ...state,\n        todoTypelist: addTodoDetail(state, action.payload),\n      }\n      \n    default:\n      return state;\n  }\n}\n","import React from \"react\";\n\nexport const TodoHeader = (props) => (\n  <div className=\"row\">\n    <div className=\"col-md-8\">\n      <h5>List of Todos</h5>\n    </div>\n    <div className=\"col-md-4\">\n      {props.children}\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport Store from \"../context/context\";\nimport { TodoHeader } from \"./TodoHeaders\";\n\nexport default function TodoList(props) {\n  const activeTodo = props.activeTodo.split(' ').join('_');\n  const { state, dispatch } = useContext(Store);\n  const todoList = state.todoListData[activeTodo] || [];\n\n  const pluralize = count =>\n    count > 1 ? ` ${count} Todos` : `${count} Todo`;\n\n  let header =\n    todoList.length === 0 ? (\n      <h4>Nothing to show, create todos</h4>\n    ) : (\n        <TodoHeader>\n          <span className=\"float-right\">{pluralize(todoList.length)}</span>\n        </TodoHeader>\n      );\n  console.log('list render')\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <br />\n            {header}\n          </div>\n        </div>\n        {todoList && todoList.length > 0 && (<div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"list-group\">\n              {todoList.map(todo => (\n                <li key={todo} className=\"list-group-item\">\n                  {todo}\n                  <button\n                    className=\"float-right btn btn-success btn-sm\"\n                    style={{ marginLeft: 10 }}\n                    onClick={() => dispatch({ type: \"COMPLETE\", payload: { key: activeTodo, todo } })}\n                  >\n                    Mark Done\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {useMemo} from \"react\";\n\nexport default function Input(props) {\n    console.log('input render')\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <br />\n                <div className=\"input-group\">\n                    <input\n                        className=\"form-control bg-light\"\n                        value={props.value}\n                        autoFocus\n                        placeholder={props.placeholder}\n                        onKeyUp={props.handleSubmitForm}\n                        onChange={props.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-info\" onClick={props.handleClick}>\n                            Add\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useContext, useState } from \"react\";\nimport Store from \"../context/context\";\nimport Input from \"./Input\";\n\nexport default function TodoForm(props) {\n  const { state, dispatch } = useContext(Store);\n\n  // Creating a local state to have currently writing\n  // todo item that will be sent to the global store.\n  const [todo, setTodo] = useState(\"\");\n  \n\n  console.log(props, 'props');\n  function handleTodoChange(e) {\n    setTodo(e.target.value);\n    console.log(state, 'state');\n  }\n\n  function handleTodoAdd() {\n    dispatch({ type: \"ADD_TODO\", payload: { todo, key: props.activeTodo } });\n    setTodo(\"\");\n  }\n\n  function handleSubmitForm(event) {\n    if (event.keyCode === 13) handleTodoAdd();\n  }\n  const inputProps = {\n    value: todo,\n    autofocus: true,\n    placeholder: 'Enter Todo',\n    handleSubmitForm,\n    handleChange: handleTodoChange,\n    handleClick: handleTodoAdd,\n  }\n  console.log('Form render')\n  return (\n    <Input {...inputProps}/>\n  );\n}\n","import React, { useContext, useState, useReducer } from \"react\";\n\nimport TodoList from \"./TodoLists\";\nimport TodoForm from \"./TodoForms\";\nimport Store from \"../context/context\";\nimport Input from \"./Input\";\n\nexport default function Container() {\n    const { state, dispatch } = useContext(Store);\n    const [todoTypeList, setTodoTypeList] = useState('')\n    const [activeTodo, setActiveTodo] = useState(state.todoTypelist[0])\n    const handleTodoChange = (e) => {\n        setTodoTypeList(e.target.value)\n    }\n    const handleTodoTypeList = () => {\n        dispatch({ type: 'TODO_TYPE_LIST', payload: todoTypeList })\n        setTodoTypeList('')\n    }\n    function handleSubmitForm(event) {\n        if (event.keyCode === 13) handleTodoTypeList();\n    }\n\n    const props = {\n        value: todoTypeList,\n        autoFocus: true,\n        placeholder: 'Todo Details',\n        handleChange: handleTodoChange,\n        handleClick: handleTodoTypeList,\n        handleSubmitForm\n    }\n    console.log('container render')\n    return (\n        <div className=\"col-12 pt-4 row justify-content-between\">\n            <section className=\"col-4\">\n                <Input {...props} />\n                <br />\n                <h6 className=\"mb-1\">Todo Types</h6>\n                {state.todoTypelist.length > 0 && (<div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <ul className=\"list-group\">\n                            {state.todoTypelist.length > 0 && state.todoTypelist.map(t => (\n                                <li key={t} className=\"list-group-item\" onClick={() => setActiveTodo(t)}>\n                                    {t}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                )}\n            </section>\n            <section className=\"col-7\">\n            <TodoForm activeTodo={activeTodo}/>\n            <TodoList activeTodo={activeTodo}/>\n            </section>\n        </div>\n    )\n}","import React, { useReducer, useContext } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Store from './context/context';\nimport reducer from './reducer/reducer';\n\nimport { usePersistedContext, usePersistedReducer } from './usePersists';\n\nimport Container from './components/Container';\n\n\nfunction App() { \n  // create a global store to store the states\n  const context = useContext(Store);\n  console.log(context, 'main context');\n  const globalStore = usePersistedContext(context, 'state');\n\n  // `todos` will be a state manager to manage states. \n  const [state, dispatch] = usePersistedReducer(useReducer(reducer, globalStore),'state');\n  return ( \n    // Store.Provider passes the state and dispatcher to the down.\n    <Store.Provider value={{ state, dispatch }}> \n      <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"col-12\">\n          <h3 className=\"pt-3 text-center\">H2 Project 2019</h3>\n          <Container />\n        </div>\n      </div>\n    </Store.Provider> // store provider ended here\n  ); \n} \n \nconst rootElement = document.getElementById(\"root\"); \nReactDOM.render(<App />, rootElement); \n ","import { useEffect } from \"react\";\n\nexport function usePersistedContext(context, key = \"state\") {\n  const persistedContext = localStorage.getItem(key);\n  return persistedContext ? JSON.parse(persistedContext) : context;\n}\n\nexport function usePersistedReducer([state, dispatch], key = \"state\") {\n  useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [state]);\n  return [state, dispatch];\n}\n"],"sourceRoot":""}